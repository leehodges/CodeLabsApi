{
  "openapi": "3.0.1",
  "info": {
    "title": "Base API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/medications/new": {
      "post": {
        "summary": "new medication",
         "tags": [
          "Medications"
        ],
        "description": "Creates and stores a new medication. Only 'name' and 'is_current' are required."
        "parameters": [
          "name: string",
          "dosage: string",
          "frequency: string",
          "date: string",
          "day: string",
          "benefits: string",
          "side_effects: string",
          "start_date: string",
          "stop_date: string",
          "reason_stopped: string",
          "is_current: boolean",
          "morning: boolean",
          "midday: boolean",
          "evening: boolean",
          "night: boolean",
        ]
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "payload": {
                      "name": "Ibuprofen",
                      "is_current": true,
                      "dosage": "30 mg",
                      "frequency": "daily",
                      "date": "",
                      "day": "",
                      "morning": false,
                      "midday": true,
                      "evening": false,
                      "night": true,
                      "benefits": "Reduces pain",
                      "side_effects": "Upsets my stomach",
                      "start_date": "May 2021",
                      "stop_date": "",
                      "reason_stopped": "",
                      "id": 5,
                      "user_id": 21
                    }
                  },
                  "status": 200
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthenticated_user"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login_user"
              }
            }
          }
        }
      }
    },
    "/api/v1/medications/meds": {
      "get": {
        "summary": "meds medication",
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/api/v1/medications/delete": {
      "delete": {
        "summary": "delete medication",
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/api/v1/medications/edit": {
      "patch": {
        "summary": "edit medication",
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "login user",
        "tags": [
          "Users"
        ],
        "description": "Logs in a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "payload": {
                      "id": 88390,
                      "email": "ahmed_waters@smitham-kessler.io",
                      "first_name": "Virgilio",
                      "last_name": "Tromp",
                      "name": "Virgilio Tromp",
                      "token": {
                        "id": 62666,
                        "created_at": "2023-04-13 23:41:46 UTC",
                        "expiry": "2023-04-20 23:41:46 UTC",
                        "ip": null,
                        "revocation_date": null,
                        "updated_at": "2023-04-13 23:41:46 UTC",
                        "user_id": 88390,
                        "value": "1EWcjkjqwpNGAYY2nAPUX6VYiupmwZR7sV"
                      }
                    },
                    "status": 200
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthenticated_user"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login_user"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/logout": {
      "delete": {
        "summary": "logout user",
        "tags": [
          "Users"
        ],
        "description": "Logs out a user",
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "logged out user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logout_user"
                }
              }
            }
          },
          "401": {
            "description": "authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_credentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "summary": "me user",
        "tags": [
          "Users"
        ],
        "description": "Display the current user",
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "user profile",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "payload": {
                      "id": 88390,
                      "email": "ahmed_waters@smitham-kessler.io",
                      "first_name": "Virgilio",
                      "last_name": "Tromp",
                      "name": "Virgilio Tromp"
                    },
                    "status": 200
                  }
                }
              }
            }
          },
          "401": {
            "description": "authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bad_credentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/create": {
      "post": {
        "summary": "create user",
        "tags": [
          "Users"
        ],
        "description": "Create a new user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "user created",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "payload": {
                      "id": 88390,
                      "email": "ahmed_waters@smitham-kessler.io",
                      "first_name": "Virgilio",
                      "last_name": "Tromp",
                      "name": "Virgilio Tromp"
                    },
                    "status": 201
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_saving_user"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_user"
              }
            }
          }
        }
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "components": {
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearer_format": "string"
      }
    },
    "schemas": {
      "create_user": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": false
          },
          "last_name": {
            "type": "string",
            "nullable": false
          },
          "email": {
            "type": "string",
            "nullable": false
          },
          "password": {
            "type": "string",
            "nullable": false
          },
          "password_confirmation": {
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "password",
          "password_confirmation"
        ]
      },
      "login_user_payload": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "payload": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 63907
                  },
                  "email": {
                    "type": "string",
                    "example": "maren@schaden.net"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Fleta"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Flatley"
                  },
                  "name": {
                    "type": "string",
                    "example": "Fleta Flatley"
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 59562
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-04-13 23:41:46 UTC"
                      },
                      "expiry": {
                        "type": "string",
                        "example": "2023-04-20 23:41:46 UTC"
                      },
                      "ip": {
                        "type": "any",
                        "example": null
                      },
                      "revocation_date": {
                        "type": "any",
                        "example": null
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2023-04-13 23:41:46 UTC"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 63907
                      },
                      "value": {
                        "type": "string",
                        "example": "1D3NUo2Msvy1YnQuQupPGgy6A7VsnkXB1B"
                      }
                    }
                  }
                }
              }
            }
          },
          "token": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 59562
              },
              "created_at": {
                "type": "string",
                "example": "2023-04-13 23:41:46 UTC"
              },
              "expiry": {
                "type": "string",
                "example": "2023-04-20 23:41:46 UTC"
              },
              "ip": {
                "type": "any",
                "example": null
              },
              "revocation_date": {
                "type": "any",
                "example": null
              },
              "updated_at": {
                "type": "string",
                "example": "2023-04-13 23:41:46 UTC"
              },
              "user_id": {
                "type": "integer",
                "example": 63907
              },
              "value": {
                "type": "string",
                "example": "1D3NUo2Msvy1YnQuQupPGgy6A7VsnkXB1B"
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "unauthenticated_user": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "errors": {
            "type": "string",
            "example": "User not authenticated"
          },
          "status": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "logout_user": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "payload": {
            "type": "string",
            "example": "You have been logged out"
          }
        }
      },
      "login_user": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true,
            "description": "email required"
          },
          "password": {
            "type": "string",
            "required": true,
            "description": "password required"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "bad_credentials": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Bad Credentials"
          },
          "status": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "me": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 63907
              },
              "email": {
                "type": "string",
                "example": "maren@schaden.net"
              },
              "first_name": {
                "type": "string",
                "example": "Fleta"
              },
              "last_name": {
                "type": "string",
                "example": "Flatley"
              },
              "name": {
                "type": "string",
                "example": "Fleta Flatley"
              }
            }
          }
        }
      },
      "create_user_payload": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 63907
              },
              "email": {
                "type": "string",
                "example": "maren@schaden.net"
              },
              "first_name": {
                "type": "string",
                "example": "Fleta"
              },
              "last_name": {
                "type": "string",
                "example": "Flatley"
              },
              "name": {
                "type": "string",
                "example": "Fleta Flatley"
              }
            }
          }
        }
      },
      "error_saving_user": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "errors": {
            "type": "string",
            "example": "There was a problem creating a new user"
          },
          "status": {
            "type": "integer",
            "example": 400
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://{localHost}",
      "variables": {
        "localHost": {
          "default": "localhost:3000"
        }
      }
    },
    {
      "url": "https://{staging}",
      "variables": {
        "staging": {
          "default": "set-staging-url-in-swagger_helper.rb"
        }
      }
    },
    {
      "url": "https://{production}",
      "variables": {
        "production": {
          "default": "set-production-url-in-swagger_helper.rb"
        }
      }
    }
  ]
}